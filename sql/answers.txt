1.
SELECT member.name
FROM main.book
         INNER JOIN main.checkout_item ON checkout_item.book_id = book.id
         INNER JOIN main.member ON member.id = checkout_item.member_id
WHERE book.title = 'The Hobbit';

ANSWER:
+------------+
| Name       |
+------------+
| Anand Beck |
+------------+

2.
SELECT count(member.id)
FROM main.member
         LEFT JOIN main.checkout_item ON checkout_item.member_id = member.id
WHERE checkout_item.member_id IS NULL;

ANSWER:
+-------+
| Count |
+-------+
| 37    |
+-------+

3.
SELECT movie.title
FROM main.movie
         LEFT JOIN main.checkout_item ON checkout_item.movie_id = movie.id
WHERE checkout_item.movie_id IS NULL
UNION
SELECT book.title
FROM main.book
         LEFT JOIN main.checkout_item ON checkout_item.book_id = book.id
WHERE checkout_item.book_id IS NULL;

ANSWER:
+--------------------------------+
| Title                          |
+--------------------------------+
| 1984                           |
| Catcher in the Rye             |
| Crouching Tiger, Hidden Dragon |
| Domain Driven Design           |
| Fellowship of the Ring         |
| Lawrence of Arabia             |
| Office Space                   |
| Thin Red Line                  |
| To Kill a Mockingbird          |
| Tom Sawyer                     |
+--------------------------------+

4.
INSERT INTO book (title)
VALUES ('The Pragmatic Programmer');

INSERT INTO member (name)
VALUES ('Stephano Ramos');

INSERT INTO checkout_item (member_id, book_id)
VALUES ((SELECT id FROM member WHERE name = 'Stephano Ramos'),
        (SELECT id FROM book WHERE title = 'The Pragmatic Programmer'));

5.
SELECT name
FROM member
         JOIN checkout_item ON member.id = checkout_item.member_id
GROUP BY member.id
HAVING count(checkout_item.member_id) > 1;

ANSWER:
+-------------+
| Name        |
+-------------+
| Anand Beck  |
| Frank Smith |
+-------------+
